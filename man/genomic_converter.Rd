% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genomic_converter.R
\name{genomic_converter}
\alias{genomic_converter}
\title{Conversion tool among several genomic formats}
\usage{
genomic_converter(
  data,
  strata = NULL,
  output = NULL,
  filename = NULL,
  parallel.core = parallel::detectCores() - 1,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{14 options for input (\strong{diploid data only}): VCFs (SNPs or Haplotypes,
to make the vcf population ready),
plink (tped, bed), stacks haplotype file, genind (library(adegenet)),
genlight (library(adegenet)), gtypes (library(strataG)), genepop, DArT,
and a data frame in long/tidy or wide format. To verify that radiator detect
your file format use \code{\link{detect_genomic_format}} (see example below).
Documented in \strong{Input genomic datasets} of \code{\link{tidy_genomic_data}}.

\strong{DArT and VCF data}: \pkg{radiator} was not meant to generate alleles
and genotypes if you are using a VCF file with no genotype
(only genotype likelihood: GL or PL).
Neither is \pkg{radiator} able to magically generate a genind object
from a SilicoDArT dataset. Please look at the first few lines of your dataset
to understand it's limit before asking raditor to convert or filter your dataset.}

\item{strata}{(optional)
The strata file is a tab delimited file with a minimum of 2 columns headers:
\code{INDIVIDUALS} and \code{STRATA}. Documented in \code{\link{read_strata}}.
DArT data: a third column \code{TARGET_ID} is required.
Documented on \code{\link{read_dart}}. Also use the strata read function to
blacklist individuals.
Default: \code{strata = NULL}.}

\item{output}{29 genomic data formats can be exported: tidy (by default),
genepop, genind, genlight, vcf (for file format version, see details below),
plink, structure, faststructure, arlequin, hierfstat, gtypes (strataG),
bayescan, betadiv, pcadapt, hzar, fineradstructure, related, seqarray,
snprelate, maverick, genepopedit, rubias, hapmap and dadi.
Use a character string,
e.g. \code{output = c("genind", "genepop", "structure")}, to have preferred
output formats generated. With default, only the tidy format is generated.

Make sure to read the particularities of each format, some might
requires extra columns in the strata file. You can find the info in the
corresponding \emph{write_} functions of radiator
(\href{https://thierrygosselin.github.io/radiator/reference/index.html}{reference}).

Default: \code{output = NULL}.}

\item{filename}{(optional) The filename prefix for the object in the global environment
or the working directory. Default: \code{filename = NULL}. A default name will be used,
customized with the output file(s) selected.}

\item{parallel.core}{(optional) The number of core used for parallel
execution during import.
Default: \code{parallel.core = parallel::detectCores() - 1}.}

\item{verbose}{(optional, logical) When \code{verbose = TRUE}
the function is a little more chatty during execution.
Default: \code{verbose = TRUE}.}

\item{...}{(optional) To pass further arguments for fine-tuning the function.}
}
\value{
The function returns an object (list). The content of the object
can be listed with \code{names(object)} and use \code{$} to isolate specific
object (see examples). Some output format will write the output file in the
working directory. The tidy genomic data frame is generated automatically.
}
\description{
The arguments in the \code{genomic_converter} function were tailored for the
reality of GBS/RADseq data while maintaining a reproducible workflow.

\itemize{
  \item \strong{Input file:} 14 diploid file formats are supported
  (see \code{data} argument below).
  \item \strong{Filters:} see \emph{Advance mode} section below for ways to
  use blacklist and whitelist related arguments.
  For best results with unfiltered datasets, use \code{\link{filter_rad}}
  (\code{genomic_converter} is included in that function!).
  \item \strong{Imputations:} deprecated module no longer available
  in \emph{genomic_converter} (see \emph{Life cycle} section below).
  \item \strong{Parallel:} Some parts of the function are designed to be conduncted on multiple CPUs
  \item \strong{Output:} 29 output file formats are supported (see \code{output} argument below)
}
}
\section{Input genomic datasets}{

\enumerate{
\item GDS file or object, must end with \code{.gds} or \code{.rad}:
documented in \code{\link{read_vcf}}

\item VCF files must end with \code{.vcf}: documented in \code{\link{tidy_vcf}}

\item PLINK files must end with \code{.tped} or \code{.bed}: documented in \code{\link{tidy_plink}}

\item genind object from
\href{https://github.com/thibautjombart/adegenet}{adegenet}:
documented in \code{\link{tidy_genind}}.

\item genlight object from
\href{https://github.com/thibautjombart/adegenet}{adegenet}:
documented in \code{\link{tidy_genlight}}.

\item gtypes object from
\href{https://github.com/EricArcher/strataG}{strataG}:
documented in \code{\link{tidy_gtypes}}.

\item dart data from \href{http://www.diversityarrays.com}{DArT}:
documented in \code{\link{read_dart}}.

\item genepop file must end with \code{.gen}, documented in \code{\link{tidy_genepop}}.

\item fstat file must end with \code{.dat}, documented in \code{\link{tidy_fstat}}.

\item haplotype file created in STACKS (e.g. \code{data = "batch_1.haplotypes.tsv"}).
To make the haplotype file population ready, you need the \code{strata} argument.

\item Data frames: documented in \code{\link{tidy_wide}}.
}
}

\section{Advance mode}{


\emph{dots-dots-dots ...} allows to pass several arguments for fine-tuning the function:
\enumerate{

\item{path.folder: } use this argument to specify an output folder.
Default: \code{path.folder = "radiator_genomic_converter"}.

\item \code{vcf.metadata} (optional, logical or string).
Default: \code{vcf.metadata = TRUE}. Documented in \code{\link{tidy_vcf}}.

\item \code{vcf.stats} (optional, logical).
Default: \code{vcf.stats = TRUE}.
Documented in \code{\link{tidy_vcf}}.

\item \code{whitelist.markers} (optional) Default \code{whitelist.markers = NULL}.
Documented in \code{\link{read_whitelist}}.

\item \code{filter.common.markers} (optional, logical).
Default: \code{filter.common.markers = TRUE}.
By defaults, only common markers are kept in the dataset.
Documented in \code{\link{filter_common_markers}}.

\item \code{filter.monomorphic} (logical, optional)
Default: \code{filter.monomorphic = TRUE}.
By defaults, only polymorphic markers across strata are kept in the dataset.
Documented in \code{\link{filter_monomorphic}}.

\item \emph{individuals to blacklist ? } Use the strata file for this.
Documented in \code{\link{read_strata}}.

\item \code{keep.allele.names} argument used when tidying genind object.
Documented in \code{\link{tidy_genind}}.
Default: \code{keep.allele.names = FALSE}.

\item \code{blacklist.id} (optional) Default: \code{blacklist.id = NULL}.
Ideally, managed in the strata file.
Documented in \code{\link{read_strata}} and \code{\link{read_blacklist_id}}.
}
}

\section{Life cycle}{


Map-independent imputation of missing genotype is avaible in my other R
package called \href{https://github.com/thierrygosselin/grur}{grur}.

Use \href{https://github.com/thierrygosselin/grur}{grur} to :
\enumerate{
\item \strong{Visualize your missing data: } before imputing your genotypes,
visualize your missing data.
Several visual tools are available inside \href{https://github.com/thierrygosselin/grur}{grur} to
help you decide the best strategy after.
\item \strong{Optimize: }
use \href{https://github.com/thierrygosselin/grur}{grur} imputation module
and other functions to optimize the imputations of your dataset.
You need to test arguments. Failing to conduct tests and adjust imputations arguments
will \strong{generate artifacts} and/or \strong{exacerbate bias}.
Using defaults is not optional here...
\item \strong{genomic_converter: }
use the output argument inside \href{https://github.com/thierrygosselin/grur}{grur}
imputation module to generate the required formats.
}
}

\section{VCF file format version}{


If you need a different VCF file format version than the current one, just change
the version inside the newly created VCF, that should do the trick.
\href{https://vcftools.github.io/specs.html}{For more
information on Variant Call Format specifications}.
}

\examples{
\dontrun{
#To verify your file is detected by radiator as the correct format:
radiator::detect_genomic_format(data = "populations.snps.vcf")

# The simplest form of the function:
require(SeqVarTools) # when using vcf as input file
snowcrab <- genomic_converter(
                   data = "populations.snps.vcf", strata = "snowcrab.strata.tsv",
                   output = c("genlight", "genepop"))

#Get the content of the object created using:
names(snowcrab)
#To isolate the genlight object (without imputation):
genlight <- snowcrab$genlight
}
}
\references{
Catchen JM, Amores A, Hohenlohe PA et al. (2011)
Stacks: Building and Genotyping Loci De Novo From Short-Read Sequences.
G3, 1, 171-182.

Catchen JM, Hohenlohe PA, Bassham S, Amores A, Cresko WA (2013)
Stacks: an analysis tool set for population genomics.
Molecular Ecology, 22, 3124-3140.

Jombart T (2008) adegenet: a R package for the multivariate
analysis of genetic markers. Bioinformatics, 24, 1403-1405.

Jombart T, Ahmed I (2011) adegenet 1.3-1:
new tools for the analysis of genome-wide SNP data.
Bioinformatics, 27, 3070-3071.

Lamy T, Legendre P, Chancerelle Y, Siu G, Claudet J (2015)
Understanding the Spatio-Temporal Response of Coral Reef Fish Communities to
Natural Disturbances: Insights from Beta-Diversity Decomposition.
PLoS ONE, 10, e0138696.

Danecek P, Auton A, Abecasis G et al. (2011)
The variant call format and VCFtools.
Bioinformatics, 27, 2156-2158.

Purcell S, Neale B, Todd-Brown K, Thomas L, Ferreira MAR,
Bender D, et al.
PLINK: a tool set for whole-genome association and population-based linkage
analyses.
American Journal of Human Genetics. 2007; 81: 559–575. doi:10.1086/519795

Goudet, J. (1995) FSTAT (Version 1.2): A computer program to
calculate F- statistics. Journal of Heredity, 86, 485-486.

Goudet, J. (2005) hierfstat, a package for r to compute and test hierarchical F-statistics. Molecular Ecology Notes, 5, 184-186.

Eric Archer, Paula Adams and Brita Schneiders (2016).
strataG: Summaries and Population Structure Analyses of
Genetic Data. R package version 1.0.5. https://CRAN.R-project.org/package=strataG

Zheng X, Levine D, Shen J, Gogarten SM, Laurie C, Weir BS.
A high-performance computing toolset for relatedness and principal component
analysis of SNP data. Bioinformatics. 2012;28: 3326-3328.
doi:10.1093/bioinformatics/bts606

Foll, M and OE Gaggiotti (2008) A genome scan method to identify
selected loci appropriate
for both dominant and codominant markers: A Bayesian perspective.
Genetics 180: 977-993

Foll M, Fischer MC, Heckel G and L Excoffier (2010)
Estimating population structure from
AFLP amplification intensity. Molecular Ecology 19: 4638-4647

Fischer MC, Foll M, Excoffier L and G Heckel (2011) Enhanced AFLP
genome scans detect
local adaptation in high-altitude populations of a small rodent (Microtus arvalis).
Molecular Ecology 20: 1450-1462

Malinsky M, Trucchi E, Lawson D, Falush D (2018)
RADpainter and fineRADstructure: population inference from RADseq data.
bioRxiv, 057711.

Pew J, Muir PH, Wang J, Frasier TR (2015)
related: an R package for analysing pairwise relatedness from codominant
molecular markers.
Molecular Ecology Resources, 15, 557-561.

Raj A, Stephens M, Pritchard JK (2014)
fastSTRUCTURE: Variational Inference of Population Structure in Large SNP
Datasets. Genetics, 197, 573-589.

Verity R, Nichols RA (2016) Estimating the Number of
Subpopulations (K) in Structured Populations.
Genetics, 203, genetics.115.180992-1839.

Zheng X, Gogarten S, Lawrence M, Stilp A, Conomos M, Weir BS,
Laurie C, Levine D (2017). SeqArray -- A storage-efficient high-performance
data format for WGS variant calls.
Bioinformatics.
}
\seealso{
\code{beta.div} is available on Pierre Legendre web site \url{http://adn.biol.umontreal.ca/~numericalecology/Rcode/}


\code{\link{detect_genomic_format}}


\code{\link{tidy_genomic_data}}

\href{https://github.com/thierrygosselin/grur}{grur}

\code{\link{read_strata}}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
