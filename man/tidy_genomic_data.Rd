% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radiator_tidy.R
\name{tidy_genomic_data}
\alias{tidy_genomic_data}
\title{Transform common genomic dataset format in a tidy data frame}
\usage{
tidy_genomic_data(
  data,
  strata = NULL,
  filename = NULL,
  parallel.core = parallel::detectCores() - 1,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{14 options for input (\strong{diploid data only}): VCFs (SNPs or Haplotypes,
to make the vcf population ready),
plink (tped, bed), stacks haplotype file, genind (library(adegenet)),
genlight (library(adegenet)), gtypes (library(strataG)), genepop, DArT,
and a data frame in long/tidy or wide format. To verify that radiator detect
your file format use \code{\link{detect_genomic_format}} (see example below).
Documented in \strong{Input genomic datasets} of \code{\link{tidy_genomic_data}}.

\strong{DArT and VCF data}: \pkg{radiator} was not meant to generate alleles
and genotypes if you are using a VCF file with no genotype
(only genotype likelihood: GL or PL).
Neither is \pkg{radiator} able to magically generate a genind object
from a SilicoDArT dataset. Please look at the first few lines of your dataset
to understand it's limit before asking raditor to convert or filter your dataset.}

\item{strata}{(optional)
The strata file is a tab delimited file with a minimum of 2 columns headers:
\code{INDIVIDUALS} and \code{STRATA}. Documented in \code{\link{read_strata}}.
DArT data: a third column \code{TARGET_ID} is required.
Documented on \code{\link{read_dart}}. Also use the strata read function to
blacklist individuals.
Default: \code{strata = NULL}.}

\item{filename}{(optional) The function uses \code{\link[fst]{write.fst}},
to write the tidy data frame in
the working directory. The file extension appended to
the \code{filename} provided is \code{.rad}.
With default: \code{filename = NULL}, the tidy data frame is
in the global environment only (i.e. not written in the working directory...).}

\item{parallel.core}{(optional) The number of core used for parallel
execution during import.
Default: \code{parallel.core = parallel::detectCores() - 1}.}

\item{verbose}{(optional, logical) When \code{verbose = TRUE}
the function is a little more chatty during execution.
Default: \code{verbose = TRUE}.}

\item{...}{(optional) To pass further arguments for fine-tuning the function.}
}
\value{
The output in your global environment is a tidy data frame.
If \code{filename} is provided, the tidy data frame is also
written in the working directory with file extension \code{.rad}.
The file is written with the
\href{https://github.com/fstpackage/fst}{Lightning Fast Serialization of Data Frames for R} package.
To read the file back in R use \code{\link[fst]{read.fst}}.
}
\description{
Transform genomic data set produced by massive parallel
sequencing pipeline (e.g.GBS/RADseq,
SNP chip, DArT, etc) into a tidy format.
The use of blacklist and whitelist along
several filtering options are available to prune the dataset.
Several arguments are available to make your data population-wise and easily
rename the pop id.
Used internally in \href{https://github.com/thierrygosselin/radiator}{radiator}
and \href{https://github.com/thierrygosselin/assigner}{assigner}
and might be of interest for users.
}
\section{Input genomic datasets}{

\enumerate{
\item VCF files must end with \code{.vcf}: documented in \code{\link{tidy_vcf}}

\item PLINK files must end with \code{.tped} or \code{.bed}: documented in \code{\link{tidy_plink}}

\item genind object from
\href{https://github.com/thibautjombart/adegenet}{adegenet}:
documented in \code{\link{tidy_genind}}.

\item genlight object from
\href{https://github.com/thibautjombart/adegenet}{adegenet}:
documented in \code{\link{tidy_genlight}}.

\item gtypes object from
\href{https://github.com/EricArcher/strataG}{strataG}:
documented in \code{\link{tidy_gtypes}}.

\item dart data from \href{http://www.diversityarrays.com}{DArT}:
documented in \code{\link{read_dart}}.

\item genepop file must end with \code{.gen}, documented in \code{\link{tidy_genepop}}.

\item fstat file must end with \code{.dat}, documented in \code{\link{tidy_fstat}}.

\item haplotype file created in STACKS (e.g. \code{data = "batch_1.haplotypes.tsv"}).
To make the haplotype file population ready, you need the \code{strata} argument.

\item Data frames: documented in \code{\link{tidy_wide}}
}
}

\section{Advance mode}{


\emph{dots-dots-dots ...} allows to pass several arguments for fine-tuning the function:
\enumerate{


\item \code{vcf.metadata} (optional, logical or string).
Default: \code{vcf.metadata = TRUE}. Documented in \code{\link{tidy_vcf}}.


\item \code{vcf.stats} (optional, logical).
Default: \code{vcf.stats = TRUE}.
Documented in \code{\link{tidy_vcf}}.


\item \code{whitelist.markers} (optional, path or object) To keep only markers in a whitelist.
Default \code{whitelist.markers = NULL}.
Documented in \code{\link{read_whitelist}}.

\item \code{blacklist.id} (optional) Default: \code{blacklist.id = NULL}.
Ideally, managed in the strata file.
Documented in \code{\link{read_strata}} and \code{\link{read_blacklist_id}}.

\item \code{filter.common.markers} (optional, logical).
Default: \code{filter.common.markers = TRUE},
Documented in \code{\link{filter_common_markers}}.

\item \code{filter.monomorphic} (logical, optional) Should the monomorphic
markers present in the dataset be filtered out ?
Default: \code{filter.monomorphic = TRUE}.
Documented in \code{\link{filter_monomorphic}}.
}
}

\examples{
\dontrun{
#To verify your file is detected by radiator as the correct format:
radiator::detect_genomic_format(data = "populations.snps.vcf")


# using VCF file as input
require(SeqArray)
tidy.vcf <- tidy_genomic_data(
   data = "populations.snps.vcf", strata = "strata.treefrog.tsv",
   whitelist.markers = "whitelist.vcf.txt")
}
}
\seealso{
\code{\link{detect_genomic_format}} and \code{\link{genomic_converter}}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
